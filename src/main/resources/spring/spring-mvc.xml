<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/mvc
	   http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
       
       
    <!-- 启动注解驱动的Spring MVC功能，注册请求url和注解POJO类方法的映射 -->
    <mvc:annotation-driven/>
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  
    <context:component-scan base-package="com.homello.web" />
    
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  
	<!--
    <bean id="mappingJacksonHttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/html;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean> 
 	 -->
    
    <bean id="stringConverter" class="org.springframework.http.converter.StringHttpMessageConverter">  
    	<property name="supportedMediaTypes">  
      		<list>  
        		<value>text/html;charset=UTF-8</value>  
      		</list>  
    	</property>  
  	</bean>   
    
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->  
    <bean  
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
               <!-- <ref bean="mappingJacksonHttpMessageConverter" />  -->
               <ref bean="stringConverter" />
            </list>  
        </property>  
    </bean>      
       
    
    <!-- 
    	引入tiles配置文件
    	配置在springmvc的视图解析器之前，这样就会优先匹配tiles配置来进行视图解析
     --> 
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer" >
        <property name="definitions">
            <list>
                <value>classpath:Tiles/tiles.xml</value>
            </list>
        </property>
    </bean>
    
    <!-- 配置视图解析器 -->
    <bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass">
            <value>org.springframework.web.servlet.view.tiles3.TilesView</value>
        </property>
        <property name="order" value="0"/>
    </bean> 

    <!-- 
    	模型解析，在请求时为模型视图名称添加前后缀 
    	比如在controller类中需要请求/WEB-INF/page/index.jsp文件，直接写index就可以了
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
    	p:viewClass="org.springframework.web.servlet.view.JstlView" 
     	p:prefix="/WEB-INF/jsp/"
     	p:suffix=".jsp" />
</beans>